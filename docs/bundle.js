!function(e){var t={};function o(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(n,i,function(t){return e[t]}.bind(null,i));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=4)}([function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GAME_CONFIG={CELL_SIZE:40,BACKGROUND_COLOR:"#28363B",GRID_COLOR:"black",SHAPE_COLORS:["#F9B38F","#BF6C86","#84AF9C","#6D5C80","#FFA3D0","#439F9E","#EF5F3C"],LEFT_KEY:37,RIGHT_KEY:39,UP_KEY:38,DOWN_KEY:40}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){var e=this;this.keysPressed=[],document.addEventListener("keydown",function(t){e.keyDown(t)})}return e.prototype.keyDown=function(e){this.keysPressed[e.keyCode]=!0},e.prototype.reset=function(){this.keysPressed=[]},e.prototype.isPressed=function(e){return this.keysPressed[e]},e}();t.keyboard=new n},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){this._x=e,this._y=t}return Object.defineProperty(e.prototype,"X",{get:function(){return this._x},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Y",{get:function(){return this._y},enumerable:!0,configurable:!0}),Object.defineProperty(e,"Zero",{get:function(){return new e(0,0)},enumerable:!0,configurable:!0}),e.prototype.addX=function(t){return new e(this._x,this._y).addToX(t)},e.prototype.addY=function(t){return new e(this._x,this._y).addToY(t)},e.prototype.addToX=function(e){return this._x+=e,this},e.prototype.addToY=function(e){return this._y+=e,this},e.prototype.add=function(e,t){this.addToX(e),this.addToY(t)},e}();t.Vector2=n},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(0),i=o(2),r=n.GAME_CONFIG.CELL_SIZE,a=function(){function e(e){this._canvas=e,this._context=this._canvas.getContext("2d")}return Object.defineProperty(e.prototype,"Width",{get:function(){return this._canvas.width},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Height",{get:function(){return this._canvas.height},enumerable:!0,configurable:!0}),e.prototype.clear=function(){this._context.clearRect(0,0,this._canvas.width,this._canvas.height)},e.prototype.drawBackground=function(e){this._context.save(),this._context.fillStyle=e,this._context.fillRect(0,0,this._canvas.width,this._canvas.height),this._context.restore()},e.prototype.drawGrid=function(e){this._context.save(),this._context.strokeStyle=e;for(var t=0;t<this.Width/r;t++)this._context.beginPath(),this._context.moveTo(t*r,0),this._context.lineTo(t*r,this.Height),this._context.stroke();for(t=0;t<this.Height/r;t++)this._context.beginPath(),this._context.moveTo(0,t*r),this._context.lineTo(this.Width,t*r),this._context.stroke();this._context.restore()},e.prototype.drawRect=function(e,t,o,n){this._context.save(),this._context.fillStyle=t,this._context.fillRect(e.X,e.Y,o,n),this._context.restore()},e.prototype.drawRectAtCell=function(e,t,o){this.drawRect(new i.Vector2(t*r,e*r),o,r,r)},e}(),h=document.getElementById("screen");t.canvas2D=new a(h)},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,i=o(5),r=o(1),a=o(3),h=o(0),s=a.canvas2D.Width/h.GAME_CONFIG.CELL_SIZE,c=a.canvas2D.Height/h.GAME_CONFIG.CELL_SIZE;function p(){n.update(),r.keyboard.reset(),a.canvas2D.clear(),a.canvas2D.drawBackground(h.GAME_CONFIG.BACKGROUND_COLOR),n.draw(),a.canvas2D.drawGrid(h.GAME_CONFIG.GRID_COLOR),requestAnimationFrame(p)}n=new i.GameWorld(s,c),p()},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(0),i=o(1),r=o(2),a=o(3),h=o(6),s=o(7),c=function(){function e(e,t){this._refreshRate=15,this._frame=0,this._movingShape=[],this._shapeTypes=[s.ShapeType.I,s.ShapeType.J,s.ShapeType.L,s.ShapeType.O,s.ShapeType.S,s.ShapeType.Z,s.ShapeType.T],this._width=e,this._height=t,this.initMap(),this.generateRandomShape()}return e.prototype.initMap=function(){this._map=[];for(var e=0;e<this._height;e++){this._map[e]=[];for(var t=0;t<this._width;t++)this._map[e][t]=new h.Cell}},e.prototype.isCellFilled=function(e,t){return this._map[t][e].filled},e.prototype.clearCell=function(e,t){this._map[t][e].filled=!1},e.prototype.colorCell=function(e,t,o){this._map[t][e].filled=!0,this._map[t][e].color=o},e.prototype.isPartOfShape=function(e,t){return t.some(function(t){return t.X===e.X&&t.Y===e.Y})},e.prototype.handleInput=function(){var e=this;i.keyboard.isPressed(n.GAME_CONFIG.UP_KEY)&&this.rotateShape(),i.keyboard.isPressed(n.GAME_CONFIG.DOWN_KEY)&&this.lowerShape();var t=0;(i.keyboard.isPressed(n.GAME_CONFIG.LEFT_KEY)?t=-1:i.keyboard.isPressed(n.GAME_CONFIG.RIGHT_KEY)&&(t=1),0!==t)&&(this._movingShape.some(function(o){var n=o.X+t,i=e.isPartOfShape(o.addX(t),e._movingShape);return n<0||n===e._width||e.isCellFilled(n,o.Y)&&!i})||(this._movingShape.forEach(function(o){e.clearCell(o.X,o.Y),o.addToX(t)}),this._movingShapeOrigin&&this._movingShapeOrigin.addToX(t),this._movingShape.forEach(function(t){e.colorCell(t.X,t.Y,e._movingShapeColor)})))},e.prototype.rotateShape=function(){var e=this;if(this._movingShapeOrigin){for(var t=[],o=0;o<this._movingShape.length;o++){var n=this._movingShape[o],i=n.X-this._movingShapeOrigin.X,r=-(n.Y-this._movingShapeOrigin.Y),a=i,h=this._movingShapeOrigin.addX(r).addY(a);t.push(h)}t.every(function(t){var o=e.isPartOfShape(t,e._movingShape);return t.Y>=0&&t.X>=0&&t.X<e._width&&(!e.isCellFilled(t.X,t.Y)||o)})&&(this._movingShape.forEach(function(t){e.clearCell(t.X,t.Y)}),this._movingShape=t,this._movingShape.forEach(function(t){e.colorCell(t.X,t.Y,e._movingShapeColor)}))}},e.prototype.lowerShape=function(){var e=this,t=this._movingShape.some(function(t){var o=t.Y+1,n=e.isPartOfShape(t.addY(1),e._movingShape);return o===e._height||e.isCellFilled(t.X,o)&&!n});return t||(this._movingShape.forEach(function(t){e.clearCell(t.X,t.Y),t.addToY(1)}),this._movingShapeOrigin&&this._movingShapeOrigin.addToY(1),this._movingShape.forEach(function(t){e.colorCell(t.X,t.Y,e._movingShapeColor)})),t},e.prototype.handleFilledLines=function(){for(var e=0;e<this._map.length;e++){if(this._map[e].every(function(e){return e.filled})){this._map.splice(e,1);for(var t=[],o=0;o<this._width;o++)t[o]=new h.Cell;this._map.unshift(t)}}},e.prototype.checkForGameOver=function(){return this._map[0].some(function(e){return e.filled})},e.prototype.addShape=function(e){var t,o,i=this;switch(this._movingShape=[],e){case s.ShapeType.I:t=Math.floor(Math.random()*this._width),o=new r.Vector2(t,0),this._movingShape=[new r.Vector2(o.X,o.Y),new r.Vector2(o.X,o.Y+1),new r.Vector2(o.X,o.Y+2),new r.Vector2(o.X,o.Y+3)],this._movingShapeOrigin=new r.Vector2(o.X,o.Y+1);break;case s.ShapeType.J:t=Math.floor(Math.random()*(this._width-1))+1,o=new r.Vector2(t,0),this._movingShape=[new r.Vector2(o.X,o.Y),new r.Vector2(o.X,o.Y+1),new r.Vector2(o.X,o.Y+2),new r.Vector2(o.X-1,o.Y+2)],this._movingShapeOrigin=new r.Vector2(o.X,o.Y+1);break;case s.ShapeType.L:t=Math.floor(Math.random()*(this._width-1)),o=new r.Vector2(t,0),this._movingShape=[new r.Vector2(o.X,o.Y),new r.Vector2(o.X,o.Y+1),new r.Vector2(o.X,o.Y+2),new r.Vector2(o.X+1,o.Y+2)],this._movingShapeOrigin=new r.Vector2(o.X,o.Y+1);break;case s.ShapeType.O:t=Math.floor(Math.random()*(this._width-1)),o=new r.Vector2(t,0),this._movingShape=[new r.Vector2(o.X,o.Y),new r.Vector2(o.X+1,o.Y),new r.Vector2(o.X,o.Y+1),new r.Vector2(o.X+1,o.Y+1)],this._movingShapeOrigin=null;break;case s.ShapeType.S:t=Math.floor(Math.random()*(this._width-2))+1,o=new r.Vector2(t,0),this._movingShape=[new r.Vector2(o.X,o.Y),new r.Vector2(o.X+1,o.Y),new r.Vector2(o.X,o.Y+1),new r.Vector2(o.X-1,o.Y+1)],this._movingShapeOrigin=new r.Vector2(o.X,o.Y+1);break;case s.ShapeType.Z:t=Math.floor(Math.random()*(this._width-2))+1,o=new r.Vector2(t,0),this._movingShape=[new r.Vector2(o.X,o.Y),new r.Vector2(o.X-1,o.Y),new r.Vector2(o.X,o.Y+1),new r.Vector2(o.X+1,o.Y+1)],this._movingShapeOrigin=new r.Vector2(o.X,o.Y+1);break;case s.ShapeType.T:t=Math.floor(Math.random()*(this._width-2))+1,o=new r.Vector2(t,0),this._movingShape=[new r.Vector2(o.X,o.Y),new r.Vector2(o.X,o.Y+1),new r.Vector2(o.X-1,o.Y+1),new r.Vector2(o.X+1,o.Y+1)],this._movingShapeOrigin=new r.Vector2(o.X,o.Y+1)}var a=this._shapeTypes.indexOf(e);this._movingShapeColor=n.GAME_CONFIG.SHAPE_COLORS[a],this._movingShape.forEach(function(e){i.colorCell(e.X,e.Y,i._movingShapeColor)})},e.prototype.generateRandomShape=function(){var e=Math.floor(Math.random()*this._shapeTypes.length);this.addShape(this._shapeTypes[e])},e.prototype.update=function(){(this.handleInput(),++this._frame%this._refreshRate)||this.lowerShape()&&(this.handleFilledLines(),this.checkForGameOver()?console.log("Game Over!"):this.generateRandomShape())},e.prototype.draw=function(){for(var e=0;e<this._map.length;e++)for(var t=0;t<this._map[e].length;t++){var o=this._map[e][t];o.filled&&a.canvas2D.drawRectAtCell(e,t,o.color)}},e}();t.GameWorld=c},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this._filled=!1}return Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(e){this._color=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filled",{get:function(){return this._filled},set:function(e){this._filled=e},enumerable:!0,configurable:!0}),e}();t.Cell=n},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.I=0]="I",e[e.J=1]="J",e[e.L=2]="L",e[e.S=3]="S",e[e.Z=4]="Z",e[e.O=5]="O",e[e.T=6]="T"}(t.ShapeType||(t.ShapeType={}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,