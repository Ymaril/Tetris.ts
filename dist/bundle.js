!function(e){var t={};function i(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,o){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(o,n,function(t){return e[t]}.bind(null,n));return o},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=4)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GAME_CONFIG={CELL_SIZE:80,BACKGROUND_COLOR:"#28363B",STROKE_COLOR:"black",SHAPE_COLORS:["#F9B38F","#BF6C86","#84AF9C","#6D5C80","#FFA3D0","#439F9E","#EF5F3C"],FONT:"40px Arial",FONT_COLOR:"white",SCORE_POSITION:{X:20,Y:50},LEFT_KEY:37,RIGHT_KEY:39,UP_KEY:38,DOWN_KEY:40,DROP:13}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(){var e=this;this.keysPressed=[],document.addEventListener("keydown",function(t){e.keyDown(t)})}return e.prototype.keyDown=function(e){this.keysPressed[e.keyCode]=!0},e.prototype.reset=function(){this.keysPressed=[]},e.prototype.isPressed=function(e){return this.keysPressed[e]},e}();t.keyboard=new o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){this._x=e,this._y=t}return Object.defineProperty(e.prototype,"X",{get:function(){return this._x},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Y",{get:function(){return this._y},enumerable:!0,configurable:!0}),Object.defineProperty(e,"Zero",{get:function(){return new e(0,0)},enumerable:!0,configurable:!0}),e.prototype.addX=function(t){return new e(this._x,this._y).addToX(t)},e.prototype.addY=function(t){return new e(this._x,this._y).addToY(t)},e.prototype.addToX=function(e){return this._x+=e,this},e.prototype.addToY=function(e){return this._y+=e,this},e.prototype.add=function(e,t){this.addToX(e),this.addToY(t)},e}();t.Vector2=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=i(2),n=function(){function e(e){this._canvas=e,this._context=this._canvas.getContext("2d"),this.fixDPI()}return Object.defineProperty(e.prototype,"Width",{get:function(){return this._canvas.width},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Height",{get:function(){return this._canvas.height},enumerable:!0,configurable:!0}),e.prototype.clear=function(){this._context.clearRect(0,0,this._canvas.width,this._canvas.height)},e.prototype.fixDPI=function(){var e=window.devicePixelRatio,t=+getComputedStyle(this._canvas).getPropertyValue("height").slice(0,-2),i=+getComputedStyle(this._canvas).getPropertyValue("width").slice(0,-2);this._canvas.setAttribute("height",(t*e).toString()),this._canvas.setAttribute("width",(i*e).toString())},e.prototype.drawBackground=function(e){this._context.save(),this._context.fillStyle=e,this._context.fillRect(0,0,this._canvas.width,this._canvas.height),this._context.restore()},e.prototype.drawRect=function(e,t,i,o,n){this._context.save(),this._context.strokeStyle=i,this._context.fillStyle=t,this._context.fillRect(e.X,e.Y,o,n),this._context.strokeRect(e.X,e.Y,o,n),this._context.restore()},e.prototype.drawText=function(e,t,i,o){this._context.save(),this._context.fillStyle=i,this._context.font=t,this._context.fillText(e,o.X,o.Y),this._context.restore()},e.prototype.drawRectAtCell=function(e,t,i,n,r){this.drawRect(new o.Vector2(t*r,e*r),i,n,r,r)},e}(),r=document.getElementById("screen");t.canvas2D=new n(r)},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o,n=i(5),r=i(1),a=i(3),h=i(0),s=a.canvas2D.Width/h.GAME_CONFIG.CELL_SIZE,c=a.canvas2D.Height/h.GAME_CONFIG.CELL_SIZE;function p(){o.update(),r.keyboard.reset(),a.canvas2D.clear(),a.canvas2D.drawBackground(h.GAME_CONFIG.BACKGROUND_COLOR),o.draw(),requestAnimationFrame(p)}o=new n.GameWorld(s,c),p()},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=i(0),n=i(1),r=i(2),a=i(3),h=i(6),s=i(7),c=function(){function e(e,t){this._updateEveryXFrames=20,this._frame=0,this._movingShape=[],this._score=0,this._shapeTypes=[s.ShapeType.I,s.ShapeType.J,s.ShapeType.L,s.ShapeType.O,s.ShapeType.S,s.ShapeType.Z,s.ShapeType.T],this._width=e,this._height=t,this.initMap(),this.generateRandomShape()}return Object.defineProperty(e.prototype,"gameOver",{get:function(){return this._gameOver},enumerable:!0,configurable:!0}),e.prototype.initMap=function(){this._map=[];for(var e=0;e<this._height;e++){this._map[e]=[];for(var t=0;t<this._width;t++)this._map[e][t]=new h.Cell}},e.prototype.isCellFilled=function(e,t){return this.isInMap(e,t)&&this._map[t][e].filled},e.prototype.clearCell=function(e,t){this.isInMap(e,t)&&(this._map[t][e].filled=!1)},e.prototype.isInMap=function(e,t){return e>=0&&e<this._width&&t>=0&&t<this._height},e.prototype.colorCell=function(e,t,i){this.isInMap(e,t)&&(this._map[t][e].filled=!0,this._map[t][e].color=i)},e.prototype.isPartOfShape=function(e,t){return t.some(function(t){return t.X===e.X&&t.Y===e.Y})},e.prototype.increaseScore=function(){this._score+=this._width},e.prototype.dropShape=function(){for(;!this.lowerShape(););},e.prototype.handleInput=function(){var e=this,t=0;(n.keyboard.isPressed(o.GAME_CONFIG.DROP)?this.dropShape():n.keyboard.isPressed(o.GAME_CONFIG.UP_KEY)?this.rotateShape():n.keyboard.isPressed(o.GAME_CONFIG.DOWN_KEY)?this.lowerShape():n.keyboard.isPressed(o.GAME_CONFIG.LEFT_KEY)?t=-1:n.keyboard.isPressed(o.GAME_CONFIG.RIGHT_KEY)&&(t=1),0!==t)&&(this._movingShape.some(function(i){var o=i.X+t,n=e.isPartOfShape(i.addX(t),e._movingShape);return o<0||o===e._width||e.isCellFilled(o,i.Y)&&!n})||(this._movingShape.forEach(function(i){e.clearCell(i.X,i.Y),i.addToX(t)}),this._movingShapeOrigin&&this._movingShapeOrigin.addToX(t),this._movingShape.forEach(function(t){e.colorCell(t.X,t.Y,e._movingShapeColor)})))},e.prototype.rotateShape=function(){var e=this;if(this._movingShapeOrigin){for(var t=[],i=0;i<this._movingShape.length;i++){var o=this._movingShape[i],n=o.X-this._movingShapeOrigin.X,r=-(o.Y-this._movingShapeOrigin.Y),a=n,h=this._movingShapeOrigin.addX(r).addY(a);t.push(h)}t.every(function(t){var i=e.isPartOfShape(t,e._movingShape);return t.Y>=0&&t.X>=0&&t.X<e._width&&(!e.isCellFilled(t.X,t.Y)||i)})&&(this._movingShape.forEach(function(t){e.clearCell(t.X,t.Y)}),this._movingShape=t,this._movingShape.forEach(function(t){e.colorCell(t.X,t.Y,e._movingShapeColor)}))}},e.prototype.lowerShape=function(){var e=this,t=this._movingShape.some(function(t){var i=t.Y+1,o=e.isPartOfShape(t.addY(1),e._movingShape);return i===e._height||e.isCellFilled(t.X,i)&&!o});return t||(this._movingShape.forEach(function(t){e.clearCell(t.X,t.Y),t.addToY(1)}),this._movingShapeOrigin&&this._movingShapeOrigin.addToY(1),this._movingShape.forEach(function(t){e.colorCell(t.X,t.Y,e._movingShapeColor)})),t},e.prototype.handleFilledLines=function(){for(var e=0;e<this._map.length;e++){if(this._map[e].every(function(e){return e.filled})){this._map.splice(e,1);for(var t=[],i=0;i<this._width;i++)t[i]=new h.Cell;this._map.unshift(t),this.increaseScore(),this._updateEveryXFrames>0&&this._updateEveryXFrames--}}},e.prototype.checkForGameOver=function(){return this._map[0].some(function(e){return e.filled})},e.prototype.addShape=function(e){var t,i,n=this;switch(this._movingShape=[],e){case s.ShapeType.I:t=Math.floor(Math.random()*this._width),i=new r.Vector2(t,-4),this._movingShape=[new r.Vector2(i.X,i.Y),new r.Vector2(i.X,i.Y+1),new r.Vector2(i.X,i.Y+2),new r.Vector2(i.X,i.Y+3)],this._movingShapeOrigin=new r.Vector2(i.X,i.Y+1);break;case s.ShapeType.J:t=Math.floor(Math.random()*(this._width-1))+1,i=new r.Vector2(t,-4),this._movingShape=[new r.Vector2(i.X,i.Y),new r.Vector2(i.X,i.Y+1),new r.Vector2(i.X,i.Y+2),new r.Vector2(i.X-1,i.Y+2)],this._movingShapeOrigin=new r.Vector2(i.X,i.Y+1);break;case s.ShapeType.L:t=Math.floor(Math.random()*(this._width-1)),i=new r.Vector2(t,-4),this._movingShape=[new r.Vector2(i.X,i.Y),new r.Vector2(i.X,i.Y+1),new r.Vector2(i.X,i.Y+2),new r.Vector2(i.X+1,i.Y+2)],this._movingShapeOrigin=new r.Vector2(i.X,i.Y+1);break;case s.ShapeType.O:t=Math.floor(Math.random()*(this._width-1)),i=new r.Vector2(t,-4),this._movingShape=[new r.Vector2(i.X,i.Y),new r.Vector2(i.X+1,i.Y),new r.Vector2(i.X,i.Y+1),new r.Vector2(i.X+1,i.Y+1)],this._movingShapeOrigin=null;break;case s.ShapeType.S:t=Math.floor(Math.random()*(this._width-2))+1,i=new r.Vector2(t,-4),this._movingShape=[new r.Vector2(i.X,i.Y),new r.Vector2(i.X+1,i.Y),new r.Vector2(i.X,i.Y+1),new r.Vector2(i.X-1,i.Y+1)],this._movingShapeOrigin=new r.Vector2(i.X,i.Y+1);break;case s.ShapeType.Z:t=Math.floor(Math.random()*(this._width-2))+1,i=new r.Vector2(t,-4),this._movingShape=[new r.Vector2(i.X,i.Y),new r.Vector2(i.X-1,i.Y),new r.Vector2(i.X,i.Y+1),new r.Vector2(i.X+1,i.Y+1)],this._movingShapeOrigin=new r.Vector2(i.X,i.Y+1);break;case s.ShapeType.T:t=Math.floor(Math.random()*(this._width-2))+1,i=new r.Vector2(t,-4),this._movingShape=[new r.Vector2(i.X,i.Y),new r.Vector2(i.X,i.Y+1),new r.Vector2(i.X-1,i.Y+1),new r.Vector2(i.X+1,i.Y+1)],this._movingShapeOrigin=new r.Vector2(i.X,i.Y+1)}var a=this._shapeTypes.indexOf(e);this._movingShapeColor=o.GAME_CONFIG.SHAPE_COLORS[a],this._movingShape.forEach(function(e){n.colorCell(e.X,e.Y,n._movingShapeColor)})},e.prototype.generateRandomShape=function(){var e=Math.floor(Math.random()*this._shapeTypes.length);this.addShape(this._shapeTypes[e])},e.prototype.update=function(){(this.handleInput(),++this._frame%this._updateEveryXFrames)||this.lowerShape()&&(this.handleFilledLines(),this.checkForGameOver()?this._gameOver=!0:this.generateRandomShape())},e.prototype.drawScore=function(){a.canvas2D.drawText("Score: "+this._score.toString(),o.GAME_CONFIG.FONT,o.GAME_CONFIG.FONT_COLOR,o.GAME_CONFIG.SCORE_POSITION)},e.prototype.draw=function(){for(var e=0;e<this._map.length;e++)for(var t=0;t<this._map[e].length;t++){var i=this._map[e][t];i.filled&&a.canvas2D.drawRectAtCell(e,t,i.color,o.GAME_CONFIG.STROKE_COLOR,o.GAME_CONFIG.CELL_SIZE)}this.drawScore()},e}();t.GameWorld=c},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(){this._filled=!1}return Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(e){this._color=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filled",{get:function(){return this._filled},set:function(e){this._filled=e},enumerable:!0,configurable:!0}),e}();t.Cell=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.I=0]="I",e[e.J=1]="J",e[e.L=2]="L",e[e.S=3]="S",e[e.Z=4]="Z",e[e.O=5]="O",e[e.T=6]="T"}(t.ShapeType||(t.ShapeType={}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2dhbWUuY29uZmlnLnRzIiwid2VicGFjazovLy8uL3NyYy9pbnB1dC9LZXlib2FyZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvZ2VvbS9WZWN0b3IyLnRzIiwid2VicGFjazovLy8uL3NyYy9DYW52YXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0dhbWUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0dhbWVXb3JsZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFwL0NlbGwudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NoYXBlVHlwZS9TaGFwZVR5cGUudHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJHQU1FX0NPTkZJRyIsIkNFTExfU0laRSIsIkJBQ0tHUk9VTkRfQ09MT1IiLCJTVFJPS0VfQ09MT1IiLCJTSEFQRV9DT0xPUlMiLCJGT05UIiwiRk9OVF9DT0xPUiIsIlNDT1JFX1BPU0lUSU9OIiwiWCIsIlkiLCJMRUZUX0tFWSIsIlJJR0hUX0tFWSIsIlVQX0tFWSIsIkRPV05fS0VZIiwiRFJPUCIsIktleWJvYXJkIiwiX3RoaXMiLCJ0aGlzIiwia2V5c1ByZXNzZWQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwia2V5RG93biIsImV2ZW50Iiwia2V5Q29kZSIsInJlc2V0IiwiaXNQcmVzc2VkIiwia2V5Ym9hcmQiLCJWZWN0b3IyIiwieCIsInkiLCJfeCIsIl95IiwiYWRkWCIsImFkZFRvWCIsImFkZFkiLCJhZGRUb1kiLCJhZGQiLCJWZWN0b3IyXzEiLCJDYW52YXMyRCIsImNhbnZhcyIsIl9jYW52YXMiLCJfY29udGV4dCIsImdldENvbnRleHQiLCJmaXhEUEkiLCJ3aWR0aCIsImhlaWdodCIsImNsZWFyIiwiY2xlYXJSZWN0IiwiZHBpIiwid2luZG93IiwiZGV2aWNlUGl4ZWxSYXRpbyIsInN0eWxlX2hlaWdodCIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwic2xpY2UiLCJzdHlsZV93aWR0aCIsInNldEF0dHJpYnV0ZSIsInRvU3RyaW5nIiwiZHJhd0JhY2tncm91bmQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzYXZlIiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJyZXN0b3JlIiwiZHJhd1JlY3QiLCJwb3NpdGlvbiIsImZpbGxDb2xvciIsInN0cm9rZUNvbG9yIiwic3Ryb2tlU3R5bGUiLCJzdHJva2VSZWN0IiwiZHJhd1RleHQiLCJ0ZXh0IiwiZm9udCIsImNvbG9yIiwiZmlsbFRleHQiLCJkcmF3UmVjdEF0Q2VsbCIsImoiLCJjZWxsU2l6ZSIsImdldEVsZW1lbnRCeUlkIiwiY2FudmFzMkQiLCJtYXAiLCJHYW1lV29ybGRfMSIsIktleWJvYXJkXzEiLCJDYW52YXNfMSIsImdhbWVfY29uZmlnXzEiLCJnYW1lV2lkdGgiLCJXaWR0aCIsImdhbWVIZWlnaHQiLCJIZWlnaHQiLCJnYW1lTG9vcCIsInVwZGF0ZSIsImRyYXciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJHYW1lV29ybGQiLCJDZWxsXzEiLCJTaGFwZVR5cGVfMSIsIl91cGRhdGVFdmVyeVhGcmFtZXMiLCJfZnJhbWUiLCJfbW92aW5nU2hhcGUiLCJfc2NvcmUiLCJfc2hhcGVUeXBlcyIsIlNoYXBlVHlwZSIsIkkiLCJKIiwiTCIsIk8iLCJTIiwiWiIsIlQiLCJfd2lkdGgiLCJfaGVpZ2h0IiwiaW5pdE1hcCIsImdlbmVyYXRlUmFuZG9tU2hhcGUiLCJfZ2FtZU92ZXIiLCJfbWFwIiwiQ2VsbCIsImlzQ2VsbEZpbGxlZCIsImlzSW5NYXAiLCJmaWxsZWQiLCJjbGVhckNlbGwiLCJjb2xvckNlbGwiLCJpc1BhcnRPZlNoYXBlIiwiY2VsbCIsInNoYXBlIiwic29tZSIsInNoYXBlQ2VsbCIsImluY3JlYXNlU2NvcmUiLCJkcm9wU2hhcGUiLCJsb3dlclNoYXBlIiwiaGFuZGxlSW5wdXQiLCJ0b01vdmVYIiwicm90YXRlU2hhcGUiLCJuZXh0WCIsInBhcnRPZlNoYXBlIiwiZm9yRWFjaCIsIl9tb3ZpbmdTaGFwZU9yaWdpbiIsIl9tb3ZpbmdTaGFwZUNvbG9yIiwibmV3U2hhcGUiLCJsZW5ndGgiLCJuZXdYIiwibmV3WSIsIm5ld0NlbGwiLCJwdXNoIiwiZXZlcnkiLCJyZWFjaGVkQm90dG9tIiwibmV4dFkiLCJoYW5kbGVGaWxsZWRMaW5lcyIsInNwbGljZSIsIm5ld1JvdyIsInVuc2hpZnQiLCJjaGVja0ZvckdhbWVPdmVyIiwiYWRkU2hhcGUiLCJzaGFwZVR5cGUiLCJyYW5kb21YIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwic2hhcGVUeXBlSW5kZXgiLCJpbmRleE9mIiwicmFuZG9tU2hhcGVUeXBlSW5kZXgiLCJkcmF3U2NvcmUiLCJfZmlsbGVkIiwiX2NvbG9yIiwidiJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxRQUFBLElBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdB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LEtBQUtpSixTQUFVLEVBR3ZCLE9BbEJJeEwsT0FBQUMsZUFBV3lJLEVBQUF4SCxVQUFBLFFBQUssS0FBaEIsV0FDSSxPQUFPcUIsS0FBS2tKLFlBRWhCLFNBQWlCQyxHQUNibkosS0FBS2tKLE9BQVNDLG1DQUdsQjFMLE9BQUFDLGVBQVd5SSxFQUFBeEgsVUFBQSxTQUFNLEtBQWpCLFdBQ0ksT0FBT3FCLEtBQUtpSixhQUVoQixTQUFrQkUsR0FDZG5KLEtBQUtpSixRQUFVRSxtQ0FPdkJoRCxFQXZCQSxHQUFhdEosRUFBQXNKLHNGQ0RiLFNBQVlkLEdBQ1JBLElBQUEsU0FDQUEsSUFBQSxTQUNBQSxJQUFBLFNBQ0FBLElBQUEsU0FDQUEsSUFBQSxTQUNBQSxJQUFBLFNBQ0FBLElBQUEsU0FQSixDQUFZeEksRUFBQXdJLFlBQUF4SSxFQUFBd0ksVUFBUyIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNCk7XG4iLCJleHBvcnQgY29uc3QgR0FNRV9DT05GSUcgOiBhbnkgPSB7XG5cbiAgICAvLyBQSFlTSUNTXG5cbiAgICAvLyBTSVpJTkdcbiAgICBDRUxMX1NJWkU6IDgwLFxuXG4gICAgLy8gQ09MT1JTXG4gICAgQkFDS0dST1VORF9DT0xPUjogJyMyODM2M0InLFxuICAgIFNUUk9LRV9DT0xPUjogJ2JsYWNrJyxcbiAgICBTSEFQRV9DT0xPUlM6IFtcIiNGOUIzOEZcIiwgXCIjQkY2Qzg2XCIsIFwiIzg0QUY5Q1wiLCBcIiM2RDVDODBcIiwgXCIjRkZBM0QwXCIsIFwiIzQzOUY5RVwiLCBcIiNFRjVGM0NcIl0sXG4gICAgXG4gICAgLy8gVEVYVFxuICAgIEZPTlQ6ICc0MHB4IEFyaWFsJywgICAgXG4gICAgRk9OVF9DT0xPUjogJ3doaXRlJyxcblxuICAgIC8vIFBPU0lUSU9OU1xuICAgIFNDT1JFX1BPU0lUSU9OOiB7WDogMjAsIFk6IDUwfSxcblxuICAgIC8vIEtFWVNcbiAgICBMRUZUX0tFWTogMzcsXG4gICAgUklHSFRfS0VZOiAzOSxcbiAgICBVUF9LRVk6IDM4LFxuICAgIERPV05fS0VZOiA0MCxcbiAgICBEUk9QOiAxM1xufTtcbiIsIlxuY2xhc3MgS2V5Ym9hcmQge1xuXG4gICAga2V5c1ByZXNzZWQgOiBib29sZWFuW10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHt0aGlzLmtleURvd24oZSkgfSk7XG4gICAgfVxuXG4gICAga2V5RG93bihldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICB0aGlzLmtleXNQcmVzc2VkW2V2ZW50LmtleUNvZGVdID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXNldCgpIDogdm9pZCB7XG4gICAgICAgIHRoaXMua2V5c1ByZXNzZWQgPSBbXTtcbiAgICB9XG5cbiAgICBpc1ByZXNzZWQoa2V5Q29kZTogbnVtYmVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleXNQcmVzc2VkW2tleUNvZGVdO1xuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGtleWJvYXJkID0gbmV3IEtleWJvYXJkKCk7IiwiXG5leHBvcnQgY2xhc3MgVmVjdG9yMiB7XG4gICAgcHJpdmF0ZSBfeDogbnVtYmVyO1xuICAgIHByaXZhdGUgX3k6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKHg6IG51bWJlciwgeTogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuX3ggPSB4O1xuICAgICAgICB0aGlzLl95ID0geTtcbiAgICB9XG5cbiAgICBnZXQgWCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3g7XG4gICAgfVxuICAgIFxuICAgIGdldCBZKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5feTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IFplcm8oKSB7XG4gICAgICAgIHJldHVybiBuZXcgVmVjdG9yMigwLCAwKTtcbiAgICB9XG5cbiAgICBhZGRYKHg6IG51bWJlcikge1xuICAgICAgICByZXR1cm4gbmV3IFZlY3RvcjIodGhpcy5feCwgdGhpcy5feSkuYWRkVG9YKHgpO1xuICAgIH1cblxuICAgIGFkZFkoeTogbnVtYmVyKSB7XG4gICAgICAgIHJldHVybiBuZXcgVmVjdG9yMih0aGlzLl94LCB0aGlzLl95KS5hZGRUb1koeSk7XG4gICAgfVxuXG4gICAgYWRkVG9YKHg6IG51bWJlcikge1xuICAgICAgICB0aGlzLl94ICs9IHg7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGFkZFRvWSh5OiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5feSArPSB5O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBhZGQoeCA6IG51bWJlciwgeTogbnVtYmVyKSA6IHZvaWR7XG4gICAgICAgIHRoaXMuYWRkVG9YKHgpO1xuICAgICAgICB0aGlzLmFkZFRvWSh5KTtcbiAgICB9XG59IiwiaW1wb3J0IHsgR0FNRV9DT05GSUcgfSBmcm9tICcuL2dhbWUuY29uZmlnJztcbmltcG9ydCB7IFZlY3RvcjIgfSBmcm9tICcuL2dlb20vVmVjdG9yMic7XG5cbmNsYXNzIENhbnZhczJEIHtcblxuICAgIHByaXZhdGUgX2NhbnZhcyA6IEhUTUxDYW52YXNFbGVtZW50O1xuICAgIHByaXZhdGUgX2NvbnRleHQgOiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XG5cbiAgICBjb25zdHJ1Y3RvcihjYW52YXMgOiBIVE1MQ2FudmFzRWxlbWVudCkge1xuICAgICAgICB0aGlzLl9jYW52YXMgPSBjYW52YXM7XG4gICAgICAgIHRoaXMuX2NvbnRleHQgPSB0aGlzLl9jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgdGhpcy5maXhEUEkoKTtcbiAgICB9XG5cbiAgICBnZXQgV2lkdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jYW52YXMud2lkdGg7XG4gICAgfVxuICAgIFxuICAgIGdldCBIZWlnaHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jYW52YXMuaGVpZ2h0O1xuICAgIH1cblxuICAgIGNsZWFyKCkgOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5fY2FudmFzLndpZHRoLCB0aGlzLl9jYW52YXMuaGVpZ2h0KTtcbiAgICB9XG5cbiAgICBmaXhEUEkoKXtcbiAgICAgICAgLy9nZXQgRFBJXG4gICAgICAgIGxldCBkcGk6IG51bWJlciA9IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvO1xuXG4gICAgICAgIC8vZ2V0IENTUyBoZWlnaHRcbiAgICAgICAgLy90aGUgKyBwcmVmaXggY2FzdHMgaXQgdG8gYW4gaW50ZWdlclxuICAgICAgICAvL3RoZSBzbGljZSBtZXRob2QgZ2V0cyByaWQgb2YgXCJweFwiXG4gICAgICAgIGxldCBzdHlsZV9oZWlnaHQ6IG51bWJlciA9ICtnZXRDb21wdXRlZFN0eWxlKHRoaXMuX2NhbnZhcykuZ2V0UHJvcGVydHlWYWx1ZShcImhlaWdodFwiKS5zbGljZSgwLCAtMik7XG4gICAgICAgIFxuICAgICAgICAvL2dldCBDU1Mgd2lkdGhcbiAgICAgICAgbGV0IHN0eWxlX3dpZHRoOiBudW1iZXIgPSArZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLl9jYW52YXMpLmdldFByb3BlcnR5VmFsdWUoXCJ3aWR0aFwiKS5zbGljZSgwLCAtMik7XG4gICAgICAgIFxuICAgICAgICAvL3NjYWxlIHRoZSBjYW52YXNcbiAgICAgICAgdGhpcy5fY2FudmFzLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgKHN0eWxlX2hlaWdodCAqIGRwaSkudG9TdHJpbmcoKSk7XG4gICAgICAgIHRoaXMuX2NhbnZhcy5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgKHN0eWxlX3dpZHRoICogZHBpKS50b1N0cmluZygpKTtcbiAgICB9XG5cbiAgICBkcmF3QmFja2dyb3VuZChiYWNrZ3JvdW5kQ29sb3I6IHN0cmluZykge1xuICAgICAgICB0aGlzLl9jb250ZXh0LnNhdmUoKTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5maWxsU3R5bGUgPSBiYWNrZ3JvdW5kQ29sb3I7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuZmlsbFJlY3QoMCwgMCwgdGhpcy5fY2FudmFzLndpZHRoLCB0aGlzLl9jYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5yZXN0b3JlKCk7XG4gICAgfVxuXG4gICAgZHJhd1JlY3QocG9zaXRpb246IFZlY3RvcjIsIGZpbGxDb2xvcjogc3RyaW5nLCBzdHJva2VDb2xvcjogc3RyaW5nLCB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcikgOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5zYXZlKCk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuc3Ryb2tlU3R5bGUgPSBzdHJva2VDb2xvcjtcbiAgICAgICAgdGhpcy5fY29udGV4dC5maWxsU3R5bGUgPSBmaWxsQ29sb3I7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuZmlsbFJlY3QocG9zaXRpb24uWCwgcG9zaXRpb24uWSwgd2lkdGgsIGhlaWdodCk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuc3Ryb2tlUmVjdChwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5yZXN0b3JlKCk7XG4gICAgfVxuXG4gICAgZHJhd1RleHQodGV4dDogc3RyaW5nLCBmb250OnN0cmluZywgY29sb3I6IHN0cmluZywgcG9zaXRpb246IFZlY3RvcjIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5zYXZlKCk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuZmlsbFN0eWxlID0gY29sb3I7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuZm9udCA9IGZvbnQ7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuZmlsbFRleHQodGV4dCwgcG9zaXRpb24uWCwgcG9zaXRpb24uWSk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQucmVzdG9yZSgpO1xuICAgIH1cblxuICAgIGRyYXdSZWN0QXRDZWxsKGk6IG51bWJlciwgajogbnVtYmVyLCBmaWxsQ29sb3I6IHN0cmluZywgc3Ryb2tlQ29sb3I6IHN0cmluZywgY2VsbFNpemU6IG51bWJlcikgOiB2b2lkIHtcbiAgICAgICAgdGhpcy5kcmF3UmVjdChuZXcgVmVjdG9yMihqICogY2VsbFNpemUsaSAqIGNlbGxTaXplKSwgZmlsbENvbG9yLCBzdHJva2VDb2xvciwgY2VsbFNpemUsIGNlbGxTaXplKTtcbiAgICB9XG59XG5cbmNvbnN0IGNhbnZhcyA6IEhUTUxDYW52YXNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NjcmVlbicpIGFzIEhUTUxDYW52YXNFbGVtZW50O1xuZXhwb3J0IGNvbnN0IGNhbnZhczJEID0gbmV3IENhbnZhczJEKGNhbnZhcyk7IiwiaW1wb3J0IHsgR2FtZVdvcmxkIH0gZnJvbSAnLi9HYW1lV29ybGQnO1xuaW1wb3J0IHsga2V5Ym9hcmQgfSBmcm9tICcuL2lucHV0L0tleWJvYXJkJztcbmltcG9ydCB7IGNhbnZhczJEIH0gZnJvbSAnLi9DYW52YXMnO1xuaW1wb3J0IHsgR0FNRV9DT05GSUcgfSBmcm9tICcuL2dhbWUuY29uZmlnJztcblxuY29uc3QgZ2FtZVdpZHRoID0gY2FudmFzMkQuV2lkdGggLyBHQU1FX0NPTkZJRy5DRUxMX1NJWkU7XG5jb25zdCBnYW1lSGVpZ2h0ID0gY2FudmFzMkQuSGVpZ2h0IC8gR0FNRV9DT05GSUcuQ0VMTF9TSVpFO1xuXG5sZXQgbWFwOiBHYW1lV29ybGQ7XG5cbmZ1bmN0aW9uIHN0YXJ0KCkge1xuICAgIG1hcCA9IG5ldyBHYW1lV29ybGQoZ2FtZVdpZHRoLCBnYW1lSGVpZ2h0KTtcbiAgICBnYW1lTG9vcCgpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgbWFwLnVwZGF0ZSgpO1xuICAgIGtleWJvYXJkLnJlc2V0KCk7XG59XG5cbmZ1bmN0aW9uIGRyYXcoKSB7XG4gICAgY2FudmFzMkQuY2xlYXIoKTtcbiAgICBjYW52YXMyRC5kcmF3QmFja2dyb3VuZChHQU1FX0NPTkZJRy5CQUNLR1JPVU5EX0NPTE9SKTtcbiAgICBtYXAuZHJhdygpO1xufVxuXG5mdW5jdGlvbiBnYW1lTG9vcCgpIHtcbiAgICB1cGRhdGUoKTtcbiAgICBkcmF3KCk7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGdhbWVMb29wKTtcbn1cblxuc3RhcnQoKTsiLCJpbXBvcnQgeyBHQU1FX0NPTkZJRyB9IGZyb20gJy4vZ2FtZS5jb25maWcnO1xuaW1wb3J0IHsga2V5Ym9hcmQgfSBmcm9tICcuL2lucHV0L0tleWJvYXJkJztcbmltcG9ydCB7IFZlY3RvcjIgfSBmcm9tICcuL2dlb20vVmVjdG9yMic7XG5pbXBvcnQgeyBjYW52YXMyRCB9IGZyb20gJy4vQ2FudmFzJztcbmltcG9ydCB7IENlbGwgfSBmcm9tIFwiLi9tYXAvQ2VsbFwiO1xuaW1wb3J0IHsgU2hhcGVUeXBlIH0gZnJvbSAnLi9zaGFwZVR5cGUvU2hhcGVUeXBlJztcblxuZXhwb3J0IGNsYXNzIEdhbWVXb3JsZCB7XG5cbiAgICAvLy0tLS0tLU1lbWJlcnMtLS0tLS0vL1xuXG4gICAgcHJpdmF0ZSBfbWFwOiBDZWxsW11bXTtcbiAgICBwcml2YXRlIF93aWR0aDogbnVtYmVyO1xuICAgIHByaXZhdGUgX2hlaWdodDogbnVtYmVyO1xuICAgIHByaXZhdGUgX21vdmluZ1NoYXBlQ29sb3I6IHN0cmluZztcbiAgICBwcml2YXRlIF91cGRhdGVFdmVyeVhGcmFtZXM6IG51bWJlciA9IDIwO1xuICAgIHByaXZhdGUgX2ZyYW1lOiBudW1iZXIgPSAwO1xuICAgIHByaXZhdGUgX21vdmluZ1NoYXBlOiBWZWN0b3IyW10gPSBbXTtcbiAgICBwcml2YXRlIF9tb3ZpbmdTaGFwZU9yaWdpbjogVmVjdG9yMjtcbiAgICBwcml2YXRlIF9zY29yZTogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9nYW1lT3ZlciA6IGJvb2xlYW47XG5cbiAgICBwcml2YXRlIF9zaGFwZVR5cGVzOiBTaGFwZVR5cGVbXSA9IFtcbiAgICAgICAgU2hhcGVUeXBlLkksXG4gICAgICAgIFNoYXBlVHlwZS5KLFxuICAgICAgICBTaGFwZVR5cGUuTCxcbiAgICAgICAgU2hhcGVUeXBlLk8sXG4gICAgICAgIFNoYXBlVHlwZS5TLFxuICAgICAgICBTaGFwZVR5cGUuWixcbiAgICAgICAgU2hhcGVUeXBlLlRcbiAgICBdO1xuXG4gICAgLy8tLS0tLS1Qcm9wZXJ0aWVzLS0tLS0tLy9cbiAgICBcbiAgICBwdWJsaWMgZ2V0IGdhbWVPdmVyKCkgOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dhbWVPdmVyO1xuICAgIH1cbiAgICBcbiAgICBcbiAgICAvLy0tLS0tLUNvbnN0cnVjdG9yLS0tLS0tLy9cblxuICAgIGNvbnN0cnVjdG9yKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuX3dpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMuX2hlaWdodCA9IGhlaWdodDtcbiAgICAgICAgdGhpcy5pbml0TWFwKCk7XG4gICAgICAgIHRoaXMuZ2VuZXJhdGVSYW5kb21TaGFwZSgpO1xuICAgIH1cblxuICAgIC8vLS0tLS0tUHJpdmF0ZSBNZXRob2RzLS0tLS0tLy9cblxuICAgIHByaXZhdGUgaW5pdE1hcCgpIHtcbiAgICAgICAgdGhpcy5fbWFwID0gW107XG5cbiAgICAgICAgZm9yKGxldCBpOiBudW1iZXIgPSAwIDsgaSA8IHRoaXMuX2hlaWdodCA7IGkrKyApe1xuICAgICAgICAgICAgdGhpcy5fbWFwW2ldID0gW107XG5cbiAgICAgICAgICAgIGZvcihsZXQgajogbnVtYmVyID0gMCA7IGogPCB0aGlzLl93aWR0aCA7IGorKyl7XG4gICAgICAgICAgICAgICAgdGhpcy5fbWFwW2ldW2pdID0gbmV3IENlbGwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgaXNDZWxsRmlsbGVkKHg6IG51bWJlciwgeTogbnVtYmVyKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzSW5NYXAoeCx5KSAmJiB0aGlzLl9tYXBbeV1beF0uZmlsbGVkO1xuICAgIH1cblxuICAgIHByaXZhdGUgY2xlYXJDZWxsKHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGlmKHRoaXMuaXNJbk1hcCh4LCB5KSkge1xuICAgICAgICAgICAgdGhpcy5fbWFwW3ldW3hdLmZpbGxlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpc0luTWFwKHg6IG51bWJlciwgeTogbnVtYmVyKSB7XG4gICAgICAgIHJldHVybiB4ID49IDAgJiYgeCA8IHRoaXMuX3dpZHRoICYmIHkgPj0gMCAmJiB5IDwgdGhpcy5faGVpZ2h0O1xuICAgIH1cblxuICAgIHByaXZhdGUgY29sb3JDZWxsKHg6IG51bWJlciwgeTogbnVtYmVyLCBjb2xvcjogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGlmKHRoaXMuaXNJbk1hcCh4LCB5KSl7XG4gICAgICAgICAgICB0aGlzLl9tYXBbeV1beF0uZmlsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuX21hcFt5XVt4XS5jb2xvciA9IGNvbG9yO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpc1BhcnRPZlNoYXBlKGNlbGw6IFZlY3RvcjIsIHNoYXBlOiBWZWN0b3IyW10pOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHNoYXBlLnNvbWUoc2hhcGVDZWxsID0+IHNoYXBlQ2VsbC5YID09PSBjZWxsLlggJiYgc2hhcGVDZWxsLlkgPT09IGNlbGwuWSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbmNyZWFzZVNjb3JlKCkgOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fc2NvcmUgKz0gdGhpcy5fd2lkdGg7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBkcm9wU2hhcGUoKTogdm9pZCB7XG4gICAgICAgIHdoaWxlKCF0aGlzLmxvd2VyU2hhcGUoKSl7fVxuICAgIH1cbiAgICBwcml2YXRlIGhhbmRsZUlucHV0KCk6IHZvaWQge1xuXG4gICAgICAgIGxldCB0b01vdmVYID0gMDtcblxuICAgICAgICBpZihrZXlib2FyZC5pc1ByZXNzZWQoR0FNRV9DT05GSUcuRFJPUCkpIHtcbiAgICAgICAgICAgIHRoaXMuZHJvcFNoYXBlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZihrZXlib2FyZC5pc1ByZXNzZWQoR0FNRV9DT05GSUcuVVBfS0VZKSkge1xuICAgICAgICAgICAgdGhpcy5yb3RhdGVTaGFwZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleWJvYXJkLmlzUHJlc3NlZChHQU1FX0NPTkZJRy5ET1dOX0tFWSkpIHtcbiAgICAgICAgICAgIHRoaXMubG93ZXJTaGFwZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleWJvYXJkLmlzUHJlc3NlZChHQU1FX0NPTkZJRy5MRUZUX0tFWSkpIHtcbiAgICAgICAgICAgIHRvTW92ZVggPSAtMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXlib2FyZC5pc1ByZXNzZWQoR0FNRV9DT05GSUcuUklHSFRfS0VZKSkge1xuICAgICAgICAgICAgdG9Nb3ZlWCA9IDE7XG4gICAgICAgIH1cblxuICAgICAgICBpZih0b01vdmVYICE9PSAwKXtcblxuICAgICAgICAgICAgY29uc3QgcmVhY2hlZEJvcmRlciA9IHRoaXMuX21vdmluZ1NoYXBlLnNvbWUoY2VsbCA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV4dFggPSBjZWxsLlggKyB0b01vdmVYO1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnRPZlNoYXBlID0gdGhpcy5pc1BhcnRPZlNoYXBlKGNlbGwuYWRkWCh0b01vdmVYKSwgdGhpcy5fbW92aW5nU2hhcGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0WCA8IDAgfHwgbmV4dFggPT09IHRoaXMuX3dpZHRoIHx8XG4gICAgICAgICAgICAgICAgICAgICh0aGlzLmlzQ2VsbEZpbGxlZChuZXh0WCwgY2VsbC5ZKSAmJiAhcGFydE9mU2hhcGUpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmKCFyZWFjaGVkQm9yZGVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW92aW5nU2hhcGUuZm9yRWFjaChjZWxsID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhckNlbGwoY2VsbC5YLCBjZWxsLlkpO1xuICAgICAgICAgICAgICAgICAgICBjZWxsLmFkZFRvWCh0b01vdmVYKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGlmKHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbW92aW5nU2hhcGVPcmlnaW4uYWRkVG9YKHRvTW92ZVgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuX21vdmluZ1NoYXBlLmZvckVhY2goY2VsbCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29sb3JDZWxsKGNlbGwuWCwgY2VsbC5ZLCB0aGlzLl9tb3ZpbmdTaGFwZUNvbG9yKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgcm90YXRlU2hhcGUoKTogdm9pZCB7XG5cbiAgICAgICAgaWYoIXRoaXMuX21vdmluZ1NoYXBlT3JpZ2luKXtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBuZXdTaGFwZSA9IFtdO1xuXG4gICAgICAgIGZvcihsZXQgaSA9IDAgOyBpIDwgdGhpcy5fbW92aW5nU2hhcGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBjZWxsID0gdGhpcy5fbW92aW5nU2hhcGVbaV07XG4gICAgICAgICAgICBsZXQgeCA9IGNlbGwuWCAtIHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luLlg7XG4gICAgICAgICAgICBsZXQgeSA9IGNlbGwuWSAtIHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luLlk7XG4gICAgICAgICAgICBsZXQgbmV3WCA9IC15O1xuICAgICAgICAgICAgbGV0IG5ld1kgPSB4O1xuXG4gICAgICAgICAgICBsZXQgbmV3Q2VsbCA9IHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luLmFkZFgobmV3WCkuYWRkWShuZXdZKTtcbiAgICAgICAgICAgIG5ld1NoYXBlLnB1c2gobmV3Q2VsbCk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgcG9zc2libGVSb3RhdGlvbiA9IG5ld1NoYXBlLmV2ZXJ5KGNlbGwgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGFydE9mU2hhcGUgPSB0aGlzLmlzUGFydE9mU2hhcGUoY2VsbCwgdGhpcy5fbW92aW5nU2hhcGUpO1xuICAgICAgICAgICAgcmV0dXJuIGNlbGwuWSA+PSAwICYmIGNlbGwuWCA+PSAwICYmIGNlbGwuWCA8IHRoaXMuX3dpZHRoICYmXG4gICAgICAgICAgICAgICAgKCF0aGlzLmlzQ2VsbEZpbGxlZChjZWxsLlgsIGNlbGwuWSkgfHwgcGFydE9mU2hhcGUpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZihwb3NzaWJsZVJvdGF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZS5mb3JFYWNoKGNlbGwgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJDZWxsKGNlbGwuWCwgY2VsbC5ZKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZSA9IG5ld1NoYXBlO1xuXG4gICAgICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZS5mb3JFYWNoKGNlbGwgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29sb3JDZWxsKGNlbGwuWCwgY2VsbC5ZLCB0aGlzLl9tb3ZpbmdTaGFwZUNvbG9yKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBsb3dlclNoYXBlKCk6IGJvb2xlYW4ge1xuICAgICAgICBcbiAgICAgICAgY29uc3QgcmVhY2hlZEJvdHRvbSA9IHRoaXMuX21vdmluZ1NoYXBlLnNvbWUoY2VsbCA9PiB7XG4gICAgICAgICAgICBjb25zdCBuZXh0WTogbnVtYmVyID0gY2VsbC5ZICsgMTtcbiAgICAgICAgICAgIGNvbnN0IHBhcnRPZlNoYXBlID0gdGhpcy5pc1BhcnRPZlNoYXBlKGNlbGwuYWRkWSgxKSwgdGhpcy5fbW92aW5nU2hhcGUpO1xuICAgICAgICAgICAgcmV0dXJuIG5leHRZID09PSB0aGlzLl9oZWlnaHQgfHxcbiAgICAgICAgICAgICAgICAgICAodGhpcy5pc0NlbGxGaWxsZWQoY2VsbC5YLCBuZXh0WSkgJiYgIXBhcnRPZlNoYXBlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYoIXJlYWNoZWRCb3R0b20pIHtcbiAgICAgICAgICAgIHRoaXMuX21vdmluZ1NoYXBlLmZvckVhY2goY2VsbCA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhckNlbGwoY2VsbC5YLCBjZWxsLlkpO1xuICAgICAgICAgICAgICAgIGNlbGwuYWRkVG9ZKDEpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmKHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luKXtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZU9yaWdpbi5hZGRUb1koMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuX21vdmluZ1NoYXBlLmZvckVhY2goY2VsbCA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb2xvckNlbGwoY2VsbC5YLCBjZWxsLlksIHRoaXMuX21vdmluZ1NoYXBlQ29sb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVhY2hlZEJvdHRvbTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGhhbmRsZUZpbGxlZExpbmVzKCk6IHZvaWQge1xuICAgICAgICBcbiAgICAgICAgZm9yIChsZXQgaSA9IDAgOyBpIDwgdGhpcy5fbWFwLmxlbmd0aCA7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgZmlsbGVkTGluZSA6IGJvb2xlYW4gPSB0aGlzLl9tYXBbaV0uZXZlcnkoY2VsbCA9PiBjZWxsLmZpbGxlZCk7XG5cbiAgICAgICAgICAgIGlmKGZpbGxlZExpbmUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9tYXAuc3BsaWNlKGksMSk7XG4gICAgICAgICAgICAgICAgbGV0IG5ld1JvdzogQ2VsbFtdID0gW107XG4gICAgICAgICAgICAgICAgZm9yKGxldCBqID0gMCA7IGogPCB0aGlzLl93aWR0aCA7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBuZXdSb3dbal0gPSBuZXcgQ2VsbCgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuX21hcC51bnNoaWZ0KG5ld1Jvdyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbmNyZWFzZVNjb3JlKCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYodGhpcy5fdXBkYXRlRXZlcnlYRnJhbWVzID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl91cGRhdGVFdmVyeVhGcmFtZXMtLTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGNoZWNrRm9yR2FtZU92ZXIoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tYXBbMF0uc29tZShjZWxsID0+IGNlbGwuZmlsbGVkKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGFkZFNoYXBlKHNoYXBlVHlwZTogU2hhcGVUeXBlKTogdm9pZCB7XG5cbiAgICAgICAgbGV0IHNoYXBlWSA9IC00O1xuICAgICAgICBsZXQgcmFuZG9tWDogbnVtYmVyO1xuICAgICAgICBsZXQgcG9zaXRpb246IFZlY3RvcjI7XG4gICAgICAgIHRoaXMuX21vdmluZ1NoYXBlID0gW107XG5cbiAgICAgICAgc3dpdGNoKHNoYXBlVHlwZSkge1xuICAgICAgICAgICAgY2FzZSBTaGFwZVR5cGUuSTpcbiAgICAgICAgICAgICAgICByYW5kb21YID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5fd2lkdGgpO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gbmV3IFZlY3RvcjIocmFuZG9tWCwgc2hhcGVZKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZSA9IFtcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSksXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAxKSxcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDIpLFxuICAgICAgICAgICAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZICsgMylcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgIHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luID0gbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTaGFwZVR5cGUuSjpcbiAgICAgICAgICAgICAgICByYW5kb21YID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMuX3dpZHRoIC0gMSkpICsgMTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IG5ldyBWZWN0b3IyKHJhbmRvbVgsIHNoYXBlWSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW92aW5nU2hhcGUgPSBbXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkpLFxuICAgICAgICAgICAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZICsgMSksXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAyKSxcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCAtIDEsIHBvc2l0aW9uLlkgKyAyKSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgIHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luID0gbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTaGFwZVR5cGUuTDpcbiAgICAgICAgICAgICAgICByYW5kb21YID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMuX3dpZHRoIC0gMSkpO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gbmV3IFZlY3RvcjIocmFuZG9tWCwgc2hhcGVZKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZSA9IFtcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSApLFxuICAgICAgICAgICAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZICsgMSksXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAyKSxcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCArIDEsIHBvc2l0aW9uLlkgKyAyKSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgIHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luID0gbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTaGFwZVR5cGUuTzpcbiAgICAgICAgICAgICAgICByYW5kb21YID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMuX3dpZHRoIC0gMSkpO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gbmV3IFZlY3RvcjIocmFuZG9tWCwgc2hhcGVZKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZSA9IFtcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSksXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlggKyAxLCBwb3NpdGlvbi5ZKSxcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEpLFxuICAgICAgICAgICAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YICsgMSwgcG9zaXRpb24uWSArIDEpLFxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgdGhpcy5fbW92aW5nU2hhcGVPcmlnaW4gPSBudWxsO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTaGFwZVR5cGUuUzpcbiAgICAgICAgICAgICAgICByYW5kb21YID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMuX3dpZHRoIC0gMikpICsgMTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IG5ldyBWZWN0b3IyKHJhbmRvbVgsIHNoYXBlWSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW92aW5nU2hhcGUgPSBbXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkpLFxuICAgICAgICAgICAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YICsgMSwgcG9zaXRpb24uWSksXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAxKSxcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCAtIDEsIHBvc2l0aW9uLlkgKyAxKSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgIHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luID0gbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTaGFwZVR5cGUuWjpcbiAgICAgICAgICAgICAgICByYW5kb21YID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMuX3dpZHRoIC0gMikpICsgMTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IG5ldyBWZWN0b3IyKHJhbmRvbVgsIHNoYXBlWSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW92aW5nU2hhcGUgPSBbXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkpLFxuICAgICAgICAgICAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YIC0gMSwgcG9zaXRpb24uWSksXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAxKSxcbiAgICAgICAgICAgICAgICAgICAgbmV3IFZlY3RvcjIocG9zaXRpb24uWCArIDEsIHBvc2l0aW9uLlkgKyAxKSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgIHRoaXMuX21vdmluZ1NoYXBlT3JpZ2luID0gbmV3IFZlY3RvcjIocG9zaXRpb24uWCwgcG9zaXRpb24uWSArIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTaGFwZVR5cGUuVDpcbiAgICAgICAgICAgICAgICByYW5kb21YID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMuX3dpZHRoIC0gMikpICsgMTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IG5ldyBWZWN0b3IyKHJhbmRvbVgsIHNoYXBlWSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW92aW5nU2hhcGUgPSBbXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkpLFxuICAgICAgICAgICAgICAgICAgICBuZXcgVmVjdG9yMihwb3NpdGlvbi5YLCBwb3NpdGlvbi5ZICsgMSksXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlggLSAxLCBwb3NpdGlvbi5ZICsgMSksXG4gICAgICAgICAgICAgICAgICAgIG5ldyBWZWN0b3IyKHBvc2l0aW9uLlggKyAxLCBwb3NpdGlvbi5ZICsgMSksXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZU9yaWdpbiA9IG5ldyBWZWN0b3IyKHBvc2l0aW9uLlgsIHBvc2l0aW9uLlkgKyAxKTtcbiAgICAgICAgICAgICAgICBicmVhazsgIFxuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2V0cyBzaGFwZSBjb2xvclxuICAgICAgICBjb25zdCBzaGFwZVR5cGVJbmRleCA9IHRoaXMuX3NoYXBlVHlwZXMuaW5kZXhPZihzaGFwZVR5cGUpIFxuICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZUNvbG9yID0gR0FNRV9DT05GSUcuU0hBUEVfQ09MT1JTW3NoYXBlVHlwZUluZGV4XTtcblxuICAgICAgICB0aGlzLl9tb3ZpbmdTaGFwZS5mb3JFYWNoKGNlbGwgPT4ge1xuICAgICAgICAgICAgdGhpcy5jb2xvckNlbGwoY2VsbC5YLCBjZWxsLlksIHRoaXMuX21vdmluZ1NoYXBlQ29sb3IpXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2VuZXJhdGVSYW5kb21TaGFwZSgpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgcmFuZG9tU2hhcGVUeXBlSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLl9zaGFwZVR5cGVzLmxlbmd0aCk7XG4gICAgICAgIHRoaXMuYWRkU2hhcGUodGhpcy5fc2hhcGVUeXBlc1tyYW5kb21TaGFwZVR5cGVJbmRleF0pO1xuICAgIH1cblxuICAgIC8vLS0tLS0tUHVibGljIE1ldGhvZHMtLS0tLS0vL1xuXG4gICAgcHVibGljIHVwZGF0ZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5oYW5kbGVJbnB1dCgpO1xuICAgICAgICBpZigrK3RoaXMuX2ZyYW1lICUgdGhpcy5fdXBkYXRlRXZlcnlYRnJhbWVzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVhY2hlZEJvdHRvbSA9IHRoaXMubG93ZXJTaGFwZSgpO1xuICAgICAgICBpZihyZWFjaGVkQm90dG9tKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUZpbGxlZExpbmVzKCk7XG4gICAgICAgICAgICBjb25zdCBnYW1lT3ZlcjogYm9vbGVhbiA9IHRoaXMuY2hlY2tGb3JHYW1lT3ZlcigpO1xuICAgICAgICAgICAgaWYoIWdhbWVPdmVyKXtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlUmFuZG9tU2hhcGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgdGhpcy5fZ2FtZU92ZXIgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBkcmF3U2NvcmUoKTogdm9pZCB7XG4gICAgICAgIGNhbnZhczJELmRyYXdUZXh0KCdTY29yZTogJyArIHRoaXMuX3Njb3JlLnRvU3RyaW5nKCksIEdBTUVfQ09ORklHLkZPTlQsIEdBTUVfQ09ORklHLkZPTlRfQ09MT1IsIEdBTUVfQ09ORklHLlNDT1JFX1BPU0lUSU9OKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZHJhdygpOiB2b2lkIHtcbiAgICAgICAgZm9yKGxldCBpID0gMCA7IGkgPCB0aGlzLl9tYXAubGVuZ3RoIDsgaSsrKXtcbiAgICAgICAgICAgIGZvcihsZXQgaiA9IDAgOyBqIDwgdGhpcy5fbWFwW2ldLmxlbmd0aCA7IGorKyl7XG4gICAgICAgICAgICAgICAgY29uc3QgY2VsbDogQ2VsbCA9IHRoaXMuX21hcFtpXVtqXTtcbiAgICAgICAgICAgICAgICBpZihjZWxsLmZpbGxlZCl7XG4gICAgICAgICAgICAgICAgICAgIGNhbnZhczJELmRyYXdSZWN0QXRDZWxsKGksIGosIGNlbGwuY29sb3IsIEdBTUVfQ09ORklHLlNUUk9LRV9DT0xPUiwgR0FNRV9DT05GSUcuQ0VMTF9TSVpFKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmRyYXdTY29yZSgpO1xuICAgIH1cbn0iLCJcbmV4cG9ydCBjbGFzcyBDZWxsIHtcblxuICAgIHByaXZhdGUgX2ZpbGxlZCA6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfY29sb3IgOiBzdHJpbmc7XG5cbiAgICBwdWJsaWMgZ2V0IGNvbG9yKCkgOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29sb3I7XG4gICAgfVxuICAgIHB1YmxpYyBzZXQgY29sb3IodiA6IHN0cmluZykge1xuICAgICAgICB0aGlzLl9jb2xvciA9IHY7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBmaWxsZWQoKSA6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fZmlsbGVkO1xuICAgIH1cbiAgICBwdWJsaWMgc2V0IGZpbGxlZCh2IDogYm9vbGVhbikge1xuICAgICAgICB0aGlzLl9maWxsZWQgPSB2O1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9maWxsZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgXG59IiwiZXhwb3J0IGVudW0gU2hhcGVUeXBlIHtcbiAgICBJLFxuICAgIEosXG4gICAgTCxcbiAgICBTLFxuICAgIFosXG4gICAgTyxcbiAgICBUXG59Il0sInNvdXJjZVJvb3QiOiIifQ==